name: Process Site Suggestions
on:
  issues:
    types: [labeled]
  workflow_dispatch:

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      should_process: ${{ steps.check.outputs.should_process }}
    steps:
      - name: Check if we should process
        id: check
        run: |
          echo "üîç Checking trigger conditions..."
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Issue Labels: ${{ toJson(github.event.issue.labels) }}"
          
          # Get label names
          LABEL_NAMES=$(echo '${{ toJson(github.event.issue.labels) }}' | jq -r '.[].name' | tr '[:upper:]' '[:lower:]' | tr '\n' ' ')
          echo "Label names (lowercase): $LABEL_NAMES"
          
          # Check for required labels (case insensitive)
          if [[ "$LABEL_NAMES" == *"site-suggestion"* ]] && [[ "$LABEL_NAMES" == *"approved"* ]]; then
            echo "‚úÖ Found both 'site-suggestion' and 'approved' labels"
            echo "should_process=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Missing required labels"
            echo "should_process=false" >> $GITHUB_OUTPUT
          fi

  process-suggestion:
    needs: check-trigger
    if: needs.check-trigger.outputs.should_process == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Extract site information using Node.js
        id: extract
        run: |
          echo "üìù Processing issue #${{ github.event.issue.number }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          
          # Create the issue body as a properly escaped string
          ISSUE_BODY=$(cat << 'EOF'
          ${{ github.event.issue.body }}
          EOF
          )
          
          # Use Node.js script for reliable parsing
          echo "üîÑ Using Node.js extraction script..."
          node .github/scripts/extract-issue-data.js "$ISSUE_BODY"

      - name: Add site to providers.json
        run: |
          echo "üìù Adding site to providers.json..."
          echo "Provider Key: ${{ steps.extract.outputs.provider_key }}"
          echo "Site Name: ${{ steps.extract.outputs.site_name }}"
          echo "Site URL: ${{ steps.extract.outputs.site_url }}"
          echo "Site Status: ${{ steps.extract.outputs.site_status }}"
          echo "Site Icon: ${{ steps.extract.outputs.site_icon }}"
          echo "Site Description: ${{ steps.extract.outputs.site_description }}"
          
          node .github/scripts/add-site.js \
            --key "${{ steps.extract.outputs.provider_key }}" \
            --name "${{ steps.extract.outputs.site_name }}" \
            --url "${{ steps.extract.outputs.site_url }}" \
            --status "${{ steps.extract.outputs.site_status }}" \
            --icon "${{ steps.extract.outputs.site_icon }}" \
            --description "${{ steps.extract.outputs.site_description }}" \
            --issue "${{ github.event.issue.number }}"

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GIT_TOKEN }}
          commit-message: "Add site: ${{ steps.extract.outputs.site_name }}"
          title: "Add ${{ steps.extract.outputs.site_name }} to index"
          body: |
            Auto-generated from approved site suggestion #${{ github.event.issue.number }}
            
            - **Site:** ${{ steps.extract.outputs.site_name }}
            - **URL:** ${{ steps.extract.outputs.site_url }}
            - **Category:** ${{ steps.extract.outputs.site_status }}
          branch: "add-site-${{ github.event.issue.number }}"
          delete-branch: true

      - name: Comment on issue
        if: steps.create-pr.outputs.pull-request-number != ''
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = ${{ steps.create-pr.outputs.pull-request-number }};
            console.log(`Creating comment for PR #${prNumber}`);
            
            await github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ Site suggestion processed! A pull request has been automatically created: #${prNumber}`
            });
            
            // Remove approved label and add processed label
            await github.rest.issues.removeLabel({
              issue_number: ${{ github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'approved'
            });
            
            await github.rest.issues.addLabels({
              issue_number: ${{ github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['processed', 'auto-pr-created']
            });

      - name: Handle failures
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå Automated processing failed. Please check the workflow run for details and process manually.`
            });

  debug-skip:
    if: always() && needs.check-trigger.outputs.should_process == 'false'
    needs: check-trigger
    runs-on: ubuntu-latest
    steps:
      - name: Debug skip reason
        run: |
          echo "‚ùå Workflow skipped because:"
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Issue has 'site-suggestion' label: ${{ contains(github.event.issue.labels.*.name, 'site-suggestion') }}"
          echo "Issue has 'approved' label: ${{ contains(github.event.issue.labels.*.name, 'approved') }}"
          echo "All labels: ${{ toJson(github.event.issue.labels) }}"
