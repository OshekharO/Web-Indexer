name: Process Site Suggestions
on:
  issues:
    types: [labeled]
  workflow_dispatch:

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      should_process: ${{ steps.check.outputs.should_process }}
    steps:
      - name: Check if we should process
        id: check
        run: |
          echo "üîç Checking trigger conditions..."
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Issue Labels: ${{ toJson(github.event.issue.labels) }}"
          
          # Get label names
          LABEL_NAMES=$(echo '${{ toJson(github.event.issue.labels) }}' | jq -r '.[].name' | tr '[:upper:]' '[:lower:]' | tr '\n' ' ')
          echo "Label names (lowercase): $LABEL_NAMES"
          
          # Check for required labels (case insensitive)
          if [[ "$LABEL_NAMES" == *"site-suggestion"* ]] && [[ "$LABEL_NAMES" == *"approved"* ]]; then
            echo "‚úÖ Found both 'site-suggestion' and 'approved' labels"
            echo "should_process=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Missing required labels"
            echo "should_process=false" >> $GITHUB_OUTPUT
          fi

  process-suggestion:
    needs: check-trigger
    if: needs.check-trigger.outputs.should_process == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Extract site information
        id: extract
        run: |
          echo "üìù Processing issue #${{ github.event.issue.number }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Body:"
          echo "${{ github.event.issue.body }}"
          
          # Simple extraction
          SITE_NAME=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=Site Name: \*\*).*?(?=\*\*)' | head -1)
          SITE_URL=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=URL: \*\*).*?(?=\*\*)' | head -1)
          SITE_CATEGORY=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=Category: \*\*).*?(?=\*\*)' | head -1)
          
          echo "Extracted:"
          echo "Name: '$SITE_NAME'"
          echo "URL: '$SITE_URL'" 
          echo "Category: '$SITE_CATEGORY'"
          
          # Map category
          case "$(echo "$SITE_CATEGORY" | tr '[:upper:]' '[:lower:]')" in
            "manga") STATUS=1 ;;
            "light novel"|"ln") STATUS=2 ;;
            "movie") STATUS=3 ;;
            "app") STATUS=4 ;;
            "anime") STATUS=5 ;;
            "learning") STATUS=6 ;;
            "nsfw") STATUS=7 ;;
            *) STATUS=0 ;;
          esac
          
          PROVIDER_KEY=$(echo "$SITE_NAME" | tr '[:upper:]' '[:lower:]' | tr ' ' '_' | sed 's/[^a-z0-9_]//g')Provider
          
          echo "provider_key=$PROVIDER_KEY" >> $GITHUB_OUTPUT
          echo "site_name=$SITE_NAME" >> $GITHUB_OUTPUT
          echo "site_url=$SITE_URL" >> $GITHUB_OUTPUT
          echo "site_status=$STATUS" >> $GITHUB_OUTPUT
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT

      - name: Add site to providers.json
        run: |
          node .github/scripts/add-site.js \
            --key "${{ steps.extract.outputs.provider_key }}" \
            --name "${{ steps.extract.outputs.site_name }}" \
            --url "${{ steps.extract.outputs.site_url }}" \
            --status "${{ steps.extract.outputs.site_status }}" \
            --issue "${{ steps.extract.outputs.issue_number }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GIT_TOKEN }}
          commit-message: "Add site: ${{ steps.extract.outputs.site_name }}"
          title: "Add ${{ steps.extract.outputs.site_name }} to index"
          body: |
            Auto-generated from approved site suggestion #${{ steps.extract.outputs.issue_number }}
          branch: "add-site-${{ steps.extract.outputs.issue_number }}"
          delete-branch: true

  debug-skip:
    if: always() && needs.check-trigger.outputs.should_process == 'false'
    needs: check-trigger
    runs-on: ubuntu-latest
    steps:
      - name: Debug skip reason
        run: |
          echo "‚ùå Workflow skipped because:"
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Issue has 'site-suggestion' label: ${{ contains(github.event.issue.labels.*.name, 'site-suggestion') }}"
          echo "Issue has 'approved' label: ${{ contains(github.event.issue.labels.*.name, 'approved') }}"
          echo "All labels: ${{ toJson(github.event.issue.labels) }}"
